name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test imports
      run: |
        python -c "import mcp_server.server; print('✓ Server imports successfully')"
        python -c "import mcp_server.books; print('✓ Books module imports successfully')"
        python -c "import mcp_server.exchange; print('✓ Exchange module imports successfully')"
    
    - name: Test server initialization
      run: |
        timeout 5s python -m mcp_server.server || true
        echo "✓ Server starts without immediate errors"

  docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t books-mcp-server .
    
    - name: Test Docker image
      run: |
        # Test that the container starts without immediate errors
        timeout 5s docker run --rm books-mcp-server || true
        echo "✓ Docker container starts successfully"